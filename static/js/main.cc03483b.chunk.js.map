{"version":3,"sources":["images/rackham01full.jpg","images/rackham02full.jpg","images/rackham03full.jpg","images/rackham04full.jpg","images/rackham05full.jpg","StoreItem.js","DetailItemView.js","Store.js","Diag.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StoreItem","react_default","a","createElement","className","onClick","this","props","src","image","alt","altText","description","Component","DetailItemView","onClose","Store","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","peanutButter","peanutButterCookie","bacon","baconCookie","sausage","sausageCookie","dietPeanut","rackham04full","rackham05","rackham05full","state","inventory","detail","id","_this2","console","log","item","detailView","src_DetailItemView","ev","setState","elements","i","length","push","src_StoreItem","selectItem","bind","renderDetailView","renderInventory","Diag","App","page","src_Store","src_Diag","navToShopPage","renderPageView","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc03483b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rackham01full.fd4044f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rackham02full.517b751b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rackham03full.702d2fa7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rackham04full.a6909212.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rackham05full.e48da8c9.jpg\";","import React, { Component } from 'react';\nimport './App.css';\n\n\nclass StoreItem extends Component{\n\n  render() {\n    return (\n      <div className=\"productWrapper\" onClick = {this.props.onClick}>\n        <img className=\"productImage\" src={this.props.image} alt={this.props.altText} />\n        <div className=\"productLabel\">{this.props.description}</div>\n      </div>\n    );\n  }\n}\n\n\nexport default StoreItem;\n","import React, { Component } from 'react';\nimport './App.css';\n\n\nclass DetailItemView extends Component{\n\n  render() {\n    return (\n      <div className=\"detailPane\">\n        <div className=\"Xout\" onClick={this.props.onClose}>X</div>\n        <div className=\"detailPane-inner\">\n          <img className=\"detailImage\" src={this.props.image} alt={this.props.altText} />\n          <div className=\"detailTitle\">{this.props.description}</div>\n          <p className=\"detailLabel\"> The Rackham Building was not originally \n          used for music festival. It is the graduate building, where the most\n          formal events happen. It is turned into a paradise every June, though.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default DetailItemView;\n","import React, { Component } from 'react';\nimport './App.css';\nimport StoreItem from './StoreItem.js';\nimport DetailItemView from './DetailItemView.js'\n\nimport peanutButterCookie from './images/rackham01full.jpg';\nimport baconCookie from './images/rackham02full.jpg';\nimport sausageCookie from './images/rackham03full.jpg';\nimport rackham04full from './images/rackham04full.jpg';\nimport rackham05full from './images/rackham05full.jpg';\n\n\nclass Store extends Component{\n  constructor(props) {\n    super(props);\n    var peanutButter = {image: peanutButterCookie, altText: \"dog cookie\", description: \"Rackham building\"}\n    var bacon = {image: baconCookie, altText: \"dog cookie\", description: \"Rackham lawn\"}\n    var sausage = {image: sausageCookie, altText: \"dog cookie\", description: \"My friends\"}\n    var dietPeanut = {image: rackham04full, altText: \"dog cookie\", description: \"Music festival\"}\n    var rackham05 = {image: rackham05full, altText: \"dog cookie\", description: \"Street food\"}\n\n    this.state = {\n      inventory: [peanutButter, bacon, sausage, dietPeanut, rackham05],\n      detail: null,\n    }\n  }\n\n\n  selectItem(id) {\n    console.log(\"selected \",id)\n    var item = this.state.inventory[id]\n    var detailView = \n    <DetailItemView \n    onClose = {(ev) => this.setState({detail: null})} \n    image = {item.image} altText = {item.altText} \n    description = {item.description} \n    />\n    this.setState({detail: detailView})\n  }\n\n\n  renderDetailView() {\n    if(this.state.detail !== null)\n    {\n      return this.state.detail\n    }\n  }\n\n\n  renderInventory() {\n    var elements = []\n    for(var i=0; i < this.state.inventory.length; i++)\n    {\n      var item = this.state.inventory[i]\n      elements.push(\n        <StoreItem \n        onClick = {this.selectItem.bind(this, i)} \n        image = {item.image} \n        altText = {item.altText} \n        description = {item.description} />)\n    }\n    return (\n      <div className=\"storeGroup\">\n      <header className=\"App-header\">\n            <h1 className=\"App-title\">Rackham</h1>\n            <p className=\"App-intro\">\n              Every June, Ann Arbor's Summer festival will be held on the lawn in \n              front of the Rackham Building. The summer breeze, the dancing crowds, \n              the late-night movies, and my friends sitting next to me taking a selfie......\n              This is the best memory I have about Ann Arbor.\n            </p>\n          </header>\n        {elements}\n        {this.renderDetailView()}\n      </div>\n    )\n  }\n\n\n  render() {\n    return (\n      this.renderInventory()\n    );\n  }\n}\n\n\nexport default Store;\n","import React, { Component } from 'react';\nimport './App.css';\nimport StoreItem from './StoreItem.js';\nimport DetailItemView from './DetailItemView.js'\n\nimport peanutButterCookie from './images/rackham01full.jpg';\nimport baconCookie from './images/rackham02full.jpg';\nimport sausageCookie from './images/rackham03full.jpg';\nimport rackham04full from './images/rackham04full.jpg';\nimport rackham05full from './images/rackham05full.jpg';\n\n\nclass Diag extends Component{\n  constructor(props) {\n    super(props);\n    var peanutButter = {image: peanutButterCookie, altText: \"dog cookie\", description: \"Rackham building\"}\n    var bacon = {image: baconCookie, altText: \"dog cookie\", description: \"Rackham lawn\"}\n    var sausage = {image: sausageCookie, altText: \"dog cookie\", description: \"My friends\"}\n    var dietPeanut = {image: rackham04full, altText: \"dog cookie\", description: \"Music festival\"}\n    var rackham05 = {image: rackham05full, altText: \"dog cookie\", description: \"Street food\"}\n\n    this.state = {\n      inventory: [peanutButter, bacon, sausage, dietPeanut, rackham05],\n      detail: null,\n    }\n  }\n\n\n  selectItem(id) {\n    console.log(\"selected \",id)\n    var item = this.state.inventory[id]\n    var detailView = \n    <DetailItemView \n    onClose = {(ev) => this.setState({detail: null})} \n    image = {item.image} altText = {item.altText} \n    description = {item.description} \n    />\n    this.setState({detail: detailView})\n  }\n\n\n  renderDetailView() {\n    if(this.state.detail !== null)\n    {\n      return this.state.detail\n    }\n  }\n\n\n  renderInventory() {\n    var elements = []\n    for(var i=0; i < this.state.inventory.length; i++)\n    {\n      var item = this.state.inventory[i]\n      elements.push(\n        <StoreItem \n        onClick = {this.selectItem.bind(this, i)} \n        image = {item.image} \n        altText = {item.altText} \n        description = {item.description} />)\n    }\n    return (\n      <div className=\"storeGroup\">\n      <header className=\"App-header\">\n            <h1 className=\"App-title\">Diag</h1>\n            <p className=\"App-intro\">\n              At the University of Michigan in Ann Arbor, the Diag is a large \n              open space in the middle of the university's Central Campus. \n              Originally known as the Diagonal Green, the Diag derives its \n              name from the many sidewalks running near or through it in \n              diagonal directions.\n            </p>\n          </header>\n        {elements}\n        {this.renderDetailView()}\n      </div>\n    )\n  }\n\n\n  render() {\n    return (\n      this.renderInventory()\n    );\n  }\n}\n\n\nexport default Diag;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Store from './Store.js';\nimport Diag from './Diag.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n    };\n  }\n\n\n  navToShopPage() {\n    this.setState({page: 0})\n  }\n\n  renderPageView() {\n    if(this.state.page === 0)\n      return <Store/>\n    if(this.state.page === 1)\n      return <Diag/>\n  }\n\n\n  render() {\n    return (\n      <div>\n      <div className=\"App\">\n        <div className = \"App-background\" />\n        <div className = \"App-content\">\n        <div className = \"homeMenu\">\n            <div className = {\"homeButton\" + (this.state.page === 0 ? \" active\" : \"\")} onClick={this.navToShopPage.bind(this)}>my Ann Arbor</div>\n          </div>\n          <div className = \"App-navMenu\">\n            <div className = {\"App-navMenu-button\" + (this.state.page === 0 ? \" active\" : \"\")} onClick={this.navToShopPage.bind(this)}>Rackham</div>\n            <div className = {\"App-navMenu-button\" + (this.state.page === 1 ? \" active\" : \"\")} onClick={(ev) => this.setState({page: 1})} >Diag</div>\n            <div className = {\"App-navMenu-button\" + (this.state.page === 1 ? \" active\" : \"\")} onClick={(ev) => this.setState({page: 1})} >Dana</div>\n            <div className = {\"App-navMenu-button\" + (this.state.page === 1 ? \" active\" : \"\")} onClick={(ev) => this.setState({page: 1})} >E.Liberty</div>\n            <div className = {\"App-navMenu-button\" + (this.state.page === 1 ? \" active\" : \"\")} onClick={(ev) => this.setState({page: 1})} >Nickles</div>\n          </div>\n          <div>\n          <p className=\"homeIntro\">\n              <br/><br/><br/>Only after leaving Ann Arbor did I realize<br/> it is one of the few places I feel as home.\n              </p>\n          </div>\n          {this.renderPageView()}\n\n        </div>\n      </div>\n      <footer className='foot'>\n          <p>Jing Hu @ 2018</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}